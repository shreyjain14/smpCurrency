name: Snapshot Release

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: snapshot-release
  cancel-in-progress: true

jobs:
  build-and-snapshot:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Derive Git Short SHA
        id: vars
        run: |
          echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "GIT_MSG=$(git log -1 --pretty=%s)" >> $GITHUB_ENV

      - name: Build (no tests)
        run: ./gradlew clean build -x test

      - name: Rename JAR with commit SHA
        run: |
          ORIGINAL_JAR=$(ls build/libs/*.jar | head -n1)
          BASENAME=$(basename "$ORIGINAL_JAR")
          EXT="${BASENAME##*.}"
          CORE="${BASENAME%.*}"
          cp "$ORIGINAL_JAR" "build/libs/${CORE}-${GIT_SHA}.${EXT}"
          echo "PRIMARY_JAR=$ORIGINAL_JAR" >> $GITHUB_ENV

      - name: Upload Snapshot Artifacts
        uses: actions/upload-artifact@v4
        with:
            name: snapshot-jars
            path: build/libs/*.jar
            if-no-files-found: error

      - name: Create / Update Snapshot Release
        uses: ncipollo/release-action@v1
        with:
          tag: snapshot
          name: Latest Snapshot
          prerelease: true
          draft: false
          allowUpdates: true
          replacesArtifacts: true
          artifacts: build/libs/*.jar
          artifactErrorsFailBuild: true
          body: |
            Automated snapshot build from commit ${{ github.sha }}
            Branch: `${{ github.ref }}`
            Short SHA: `${{ env.GIT_SHA }}`
            Commit: `${{ env.GIT_MSG }}`

            This release is continuously updated on each push to main/master. For stable versions, use tagged releases.

      - name: Summary
        run: |
          echo "Snapshot release updated with artifacts:" >> $GITHUB_STEP_SUMMARY
          ls -1 build/libs >> $GITHUB_STEP_SUMMARY
